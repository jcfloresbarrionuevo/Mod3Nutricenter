name: DeployAPINUR

on:
  push:
    branches: [ main ]  # Rama principal

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH environment
      run: |
        # Configurar directorio SSH con permisos correctos
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Guardar clave privada (formato correcto)
        echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Configurar known_hosts
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

        # Verificar contenido de la clave (solo para debug)
        echo "----- INICIO CLAVE -----"
        head -n 3 ~/.ssh/id_rsa
        echo "..."
        tail -n 3 ~/.ssh/id_rsa
        echo "----- FIN CLAVE -----"

    - name: Test SSH connection (verbose)
      run: |
        ssh -vvv -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'Prueba de conexi√≥n SSH exitosa!'"

    - name: Execute deployment
      env:
        PROJECT_DIR: "/home/Proyectos/Mod3Nutricenter"
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOD'
        set -ex
        cd $PROJECT_DIR || exit 1
        git fetch origin
        git reset --hard origin/main
        docker stop nutricenter-container || true
        docker rm nutricenter-container || true
        docker rmi nutricenter-api || true
        docker build -t nutricenter-api .
        docker run -d \
          --name nutricenter-container \
          -p 8080:8080 \
          -p 8081:8081 \
          --restart unless-stopped \
          nutricenter-api
        EOD
